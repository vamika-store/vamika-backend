name: Vamika-backend

on: 
    push:
        branches:
            - main
jobs:
  build-image_tag_update:
    runs-on: ubuntu-latest
    env:
        IMAGE_NAME: "vamika-backend"
        BUILDER_IMAGE: "maven:3.9.9-ibm-semeru-17-focal"
    steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Generate Version (Based on Timestamp)
          id: set_version
          run: echo "VERSION=v1.0.0-$(date +%Y-%m-%d-%H%M%S)" >>$GITHUB_ENV
        - name: Docker Login
          run: |
            echo "${{ secrets.IMAGE_REGISTRY_TOKEN }}" | docker login -u ${{ secrets.IMAGE_REGISTRY_USERNAME }} --password-stdin
        - name: Docker Build
          run: |
            COMMIT_AUTHOR=$(git log -1 --pretty=%an)
            COMMIT_ID=$(git rev-parse --short "$GITHUB_SHA")
            docker buildx build \
              --build-arg BUILDER_IMAGE="${{ env.BUILDER_IMAGE }}" \
              --label "AUTHOR=${COMMIT_AUTHOR}" \
              --label "COMMIT_ID=${COMMIT_ID}" \
              -t "${{ secrets.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}" \
              .
        - name: Push Docker image
          run: |
            docker push ${{ secrets.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
        - name: Docker Logout
          run: |
            docker logout ${{ secrets.IMAGE_REGISTRY }}
        - name: Update values.yaml with new image tag
          run: |
            git config --global user.email "chvamshikrishna24@gmail.com"
            git config --global user.name "vamshireddy24"
            git clone https://github.com/vamika-store/vamika-backend.git
            cd vamika-backend
            git checkout ${{ github.head_ref }}
            sed -i "s|tag: .*|tag: \"${{ env.VERSION }}\"|g" charts/vm-microservice/values.yaml
            git add charts/vm-microservice/values.yaml
            git commit -m "Update backend image tag to ${{ env.VERSION }} [skip ci]"
            git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/vamika-store/vamika-backend.git ${{ github.head_ref }}
        
        - name: Install Snyk CLI
          run: npm install -g snyk

        - name: Snyk Dependency Scan
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          run: |
            snyk auth ${{ secrets.SNYK_TOKEN }}
            DEBUG=*snyk* snyk test --all-projects --file=path/to/pom.xml

        - name: Snyk Docker Image Scan
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          run: |
            snyk auth ${{ secrets.SNYK_TOKEN }}
            DEBUG=*snyk* snyk container test "${{ secrets.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}"

